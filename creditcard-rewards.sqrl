IMPORT creditcard-data.Merchant AS _MerchantStream;
IMPORT creditcard-data.CardAssignment AS _CardAssignmentStream;
IMPORT creditcard-data.Transaction AS _Transaction;
IMPORT creditcard-data.MerchantReward AS _MerchantRewardStream;


/* Deduplicate CDC Streams */
_Merchant :=       DISTINCT _MerchantStream ON merchantId ORDER BY updatedTime DESC;
_CardAssignment := DISTINCT _CardAssignmentStream ON cardNo ORDER BY `timestamp` DESC;
_MerchantReward := DISTINCT _MerchantRewardStream ON merchantId ORDER BY updatedTime DESC;

/* Part 1: Compute customer rewards */
_CustomerTransaction := SELECT t.transactionId, t.cardNo, t.`time`, t.amount, m.name AS merchantName,
                               m.merchantId, m.category, c.customerId, c.cardType
                        FROM _Transaction t
                                 JOIN _CardAssignment FOR SYSTEM_TIME AS OF t.`time` c ON t.cardNo = c.cardNo
                                 JOIN _Merchant FOR SYSTEM_TIME AS OF t.`time` m ON t.merchantId = m.merchantId;

_CustomerTransactionRewards := SELECT t.*, r.rewardsByCard AS rewards FROM _CustomerTransaction t
                                                                               JOIN _MerchantReward FOR SYSTEM_TIME AS OF t.`time` r ON r.merchantId = t.merchantId;

_CustomerTransactionRewardsByCard := SELECT t.*, t.amount * (r.rewardPercentage / 100.0) as reward, r.cardType AS rewardCardType
                                     FROM _CustomerTransactionRewards t CROSS JOIN UNNEST(t.rewards) r
                                     WHERE UNIX_TIMESTAMP(DATE_FORMAT(t.`time`,'yyyy-MM-dd HH:mm:ss')) BETWEEN r.startTimestamp AND r.expirationTimestamp;

CustomerRewards := SELECT transactionId, customerId, cardNo, cardType, `time`, amount, reward, merchantName
                   FROM _CustomerTransactionRewardsByCard
                   WHERE cardType = rewardCardType;


/* Part 2a: Query and Analyze Rewards */
Rewards(customerId BIGINT NOT NULL, fromTime TIMESTAMP NOT NULL, toTime TIMESTAMP NOT NULL) :=
SELECT * FROM CustomerRewards WHERE customerId = :customerId AND :fromTime <= `time` AND :toTime > `time`
ORDER BY `time` DESC;

/*+query_by_all(customerId) */
TotalReward := SELECT customerId, SUM(reward) AS total_reward,
                      MIN(`time`) as since_time
               FROM CustomerRewards GROUP BY customerId;

/*+query_by_all(customerId) */
RewardsByDay := SELECT customerId, window_time as timeDay, SUM(reward) as total_reward
                 FROM TABLE(TUMBLE(TABLE CustomerRewards, DESCRIPTOR(`time`), INTERVAL '1' DAY))
                 GROUP BY customerId, window_start, window_end, window_time
                 ORDER BY window_time DESC;


/* Part 2b: Compute potential rewards for personalized sales */
_CustomerPotentialRewards := SELECT transactionId, customerId, rewardCardType, `time`, amount, reward, merchantName
                             FROM _CustomerTransactionRewardsByCard
                             WHERE cardType <> rewardCardType;

PotentialRewards(customerId BIGINT NOT NULL, cardType STRING NOT NULL, fromTime TIMESTAMP NOT NULL, toTime TIMESTAMP NOT NULL) :=
SELECT * FROM _CustomerPotentialRewards WHERE customerId = :customerId AND :fromTime <= `time` AND :toTime > `time`
                                          AND rewardCardType = :cardType ORDER BY `time` DESC;

/*+query_by_all(customerId) */
TotalPotentialReward := SELECT customerId, rewardCardType AS cardType, SUM(reward) AS total_reward,
                               MIN(`time`) as since_time
                        FROM _CustomerPotentialRewards
                        GROUP BY customerId, rewardCardType ORDER BY cardType DESC;

/*+query_by_all(customerId, cardType) */
PotentialRewardsByDay := SELECT customerId, rewardCardType AS cardType, window_time as timeDay, SUM(reward) as total_reward
                          FROM TABLE(TUMBLE(TABLE _CustomerPotentialRewards, DESCRIPTOR(`time`), INTERVAL '1' DAY))
                          GROUP BY customerId, window_start, window_end, window_time, rewardCardType
                          ORDER BY window_time DESC, rewardCardType ASC;



/* =======TEST CASES======== */

/*+test */
CustomerRewardsTest := SELECT * FROM CustomerRewards ORDER BY cardType DESC, `time` DESC LIMIT 5;

/*+test */
RewardsByDayTest := SELECT * FROM RewardsByDay ORDER BY customerId DESC, timeDay DESC LIMIT 5;

/*+test */
PotentialRewardsByDayTest := SELECT customerId, cardType, timeDay, total_reward
                                   FROM PotentialRewardsByDay ORDER BY total_reward DESC LIMIT 5;


